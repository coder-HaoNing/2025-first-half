在该项目已有部分的基础下，请帮我设计一个学生学情分析模块的接口文件，严格按照下列要求：

## 1. 学生个人学情查询

### 1.1 基本信息

- **请求路径**：`/students/analysis`  
- **请求方式**：GET  
- **接口描述**：根据学生姓名和性别查询个人学情分析数据  

### 1.2 请求参数

| 参数名 | 类型   | 是否必须 | 示例   | 备注          |
| ------ | ------ | -------- | ------ | ------------- |
| name   | string | 是       | 张无忌 | 学生姓名      |
| gender | string | 是       | 男     | 性别（男/女） |

请求示例：  
`/students/analysis?name=张无忌&gender=男`

### 1.3 响应数据

参数格式：`application/json`  

| 参数名            | 类型     | 是否必须 | 备注                   |
| ----------------- | -------- | -------- | ---------------------- |
| code              | number   | 必须     | 响应码（1成功，0失败） |
| msg               | string   | 非必须   | 提示信息               |
| data              | object   | 非必须   | 学情分析数据           |
| !-commentAnalysis | string   | 必须     | 评语分析结果           |
| !-heatmapData     | object[] | 必须     | 知识点掌握热力图数据   |
| !--knowledge      | string   | 必须     | 知识点名称             |
| !--masteryLevel   | number   | 必须     | 掌握程度（0-100）      |
| !-scoreTrend      | object[] | 必须     | 成绩波动数据           |
| !--homeworkOrder  | number   | 必须     | 作业次序               |
| !--score          | number   | 必须     | 得分                   |
| !-overallAnalysis | string   | 必须     | 综合学情分析结论       |

响应示例：  

```json
{
    "code": 1,
    "msg": "success",
    "data": {
        "commentAnalysis": "该生基础知识掌握扎实，但需加强综合应用能力。",
        "heatmapData": [
            {"knowledge": "三角函数", "masteryLevel": 85},
            {"knowledge": "平面几何", "masteryLevel": 70}
        ],
        "scoreTrend": [
            {"homeworkOrder": 1, "score": 89.5},
            {"homeworkOrder": 2, "score": 92.0}
        ],
        "overallAnalysis": "学习表现稳定，建议加强综合题型训练。"
    }
}
```



2.数据表结构如下
	2.1-- 学生信息表（student_info）
		CREATE TABLE student_info (
		    student_id VARCHAR(20) PRIMARY KEY COMMENT '学生学号（主键）',
		    student_name VARCHAR(50) NOT NULL COMMENT '学生姓名',
		    gender ENUM('男', '女') NOT NULL COMMENT '性别'
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='学生基本信息表';
	2.2-- 作业信息表（homework_info）
		CREATE TABLE homework_info (
		    student_id VARCHAR(20) NOT NULL COMMENT '学生学号（外键）',
		    homework_order INT UNSIGNED NOT NULL COMMENT '作业次序（数字，如0、1、2等）',
		    homework_image_path VARCHAR(255) NOT NULL COMMENT '作业图片存储路径',
		    score DECIMAL(5,2) COMMENT '得分（后台评分，允许为空）',
		    comment TEXT COMMENT '评语（后台评语，允许为空）',
		    -- 复合主键：学生学号 + 作业次序，确保同一学生不同作业次序唯一
		    PRIMARY KEY (student_id, homework_order),
		    -- 外键约束，关联学生信息表+级联删除
		    FOREIGN KEY (student_id) REFERENCES student_info(student_id) ON DELETE CASCADE
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='学生作业信息表';


3.结合已有的db_utils.py，api.py进行功能扩展